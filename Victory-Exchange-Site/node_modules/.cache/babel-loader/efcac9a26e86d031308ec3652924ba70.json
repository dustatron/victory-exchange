{"ast":null,"code":"var _jsxFileName = \"/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/Auth.js\";\nimport React, { useEffect, useState } from 'react';\nimport firebase from 'firebase';\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase';\nexport const AuthContext = React.createContext(); // function onAuthStateChange(callback) {\n//   return firebase.auth().onAuthStateChanged((user) => {\n//     if (user) {\n//       callback(firebase.auth().currentUser);\n//       console.log('The user is logged in');\n//     } else {\n//       callback(null);\n//       console.log('The user is signed out');\n//     }\n//   });\n// }\n\nexport const AuthProvider = ({\n  children\n}) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    // const unsubscribe = onAuthStateChange(setCurrentUser);\n    // console.log('in Auth currentUser', currentUser);\n    // return () => {\n    //   unsubscribe();\n    // };\n    const auth = firebase.auth();\n    const thisUser = auth.currentUser;\n\n    if (isLoaded(auth) && thisUser !== null) {\n      setCurrentUser(true);\n      console.log('in Auth thisUser =>', thisUser);\n    } else if (isLoaded(auth) && thisUser === null) {\n      setCurrentUser(null);\n    } // firebase.auth().onAuthStateChanged(setCurrentUser);\n\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      currentUser\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, children);\n};","map":{"version":3,"sources":["/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/Auth.js"],"names":["React","useEffect","useState","firebase","useFirestoreConnect","isLoaded","AuthContext","createContext","AuthProvider","children","currentUser","setCurrentUser","auth","thisUser","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,mBAAT,EAA8BC,QAA9B,QAA8C,sBAA9C;AAEA,OAAO,MAAMC,WAAW,GAAGN,KAAK,CAACO,aAAN,EAApB,C,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM,CAAEC,WAAF,EAAeC,cAAf,IAAkCT,QAAQ,CAAC,IAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACA;AACA;AACA;AAEA,UAAMW,IAAI,GAAGT,QAAQ,CAACS,IAAT,EAAb;AACA,UAAMC,QAAQ,GAAGD,IAAI,CAACF,WAAtB;;AACA,QAAIL,QAAQ,CAACO,IAAD,CAAR,IAAkBC,QAAQ,KAAK,IAAnC,EAAyC;AACvCF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,QAAnC;AACD,KAHD,MAGO,IAAIR,QAAQ,CAACO,IAAD,CAAR,IAAkBC,QAAQ,KAAK,IAAnC,EAAyC;AAC9CF,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD,KAda,CAed;;AACD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,sBAAO,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAED,MAAAA;AAAF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+CD,QAA/C,CAAP;AACD,CAtBM","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport firebase from 'firebase';\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase';\n\nexport const AuthContext = React.createContext();\n\n// function onAuthStateChange(callback) {\n//   return firebase.auth().onAuthStateChanged((user) => {\n//     if (user) {\n//       callback(firebase.auth().currentUser);\n//       console.log('The user is logged in');\n//     } else {\n//       callback(null);\n//       console.log('The user is signed out');\n//     }\n//   });\n// }\n\nexport const AuthProvider = ({ children }) => {\n  const [ currentUser, setCurrentUser ] = useState(null);\n\n  useEffect(() => {\n    // const unsubscribe = onAuthStateChange(setCurrentUser);\n    // console.log('in Auth currentUser', currentUser);\n    // return () => {\n    //   unsubscribe();\n    // };\n\n    const auth = firebase.auth();\n    const thisUser = auth.currentUser;\n    if (isLoaded(auth) && thisUser !== null) {\n      setCurrentUser(true);\n      console.log('in Auth thisUser =>', thisUser);\n    } else if (isLoaded(auth) && thisUser === null) {\n      setCurrentUser(null);\n    }\n    // firebase.auth().onAuthStateChanged(setCurrentUser);\n  }, []);\n\n  return <AuthContext.Provider value={{ currentUser }}>{children}</AuthContext.Provider>;\n};\n"]},"metadata":{},"sourceType":"module"}