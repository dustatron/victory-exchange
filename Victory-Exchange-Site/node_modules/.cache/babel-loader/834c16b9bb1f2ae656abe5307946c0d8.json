{"ast":null,"code":"var _jsxFileName = \"/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/Login.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFirebase, isLoaded, isEmpty } from 'react-redux-firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { useHistory } from 'react-router-dom'; // if you use react-router\n// import GoogleButton from 'react-google-button' // optional\n\nfunction Login() {\n  const firebase = useFirebase();\n  const auth = useSelector(state => state.firebase.auth);\n  const redirectUrl = '/dash';\n  const history = useHistory();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n    uiConfig: {\n      signInFlow: 'popup',\n      signInSuccessUrl: '/signedIn',\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccessWithAuthResult: authResult => {\n          firebase.handleRedirectResult(authResult).then(() => {\n            history.push(redirectUrl);\n          });\n          return false;\n        }\n      }\n    },\n    firebaseAuth: firebase.auth(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"Auth\"), !isLoaded(auth) ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Loading...\") : isEmpty(auth) ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Not Authed\") : /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, JSON.stringify(auth, null, 2))));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/Login.js"],"names":["React","useSelector","useFirebase","isLoaded","isEmpty","StyledFirebaseAuth","useHistory","Login","firebase","auth","state","redirectUrl","history","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","authResult","handleRedirectResult","then","push","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,OAAhC,QAA+C,sBAA/C;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B,C,CAA+C;AAC/C;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,IAAI,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACF,QAAN,CAAeC,IAA3B,CAAxB;AACA,QAAME,WAAW,GAAG,OAApB;AACA,QAAMC,OAAO,GAAGN,UAAU,EAA1B;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AACE,IAAA,QAAQ,EAAE;AACRO,MAAAA,UAAU,EAAE,OADJ;AAERC,MAAAA,gBAAgB,EAAE,WAFV;AAGRC,MAAAA,aAAa,EAAE,CAAEP,QAAQ,CAACC,IAAT,CAAcO,kBAAd,CAAiCC,WAAnC,EAAgDT,QAAQ,CAACC,IAAT,CAAcS,iBAAd,CAAgCD,WAAhF,CAHP;AAIRE,MAAAA,SAAS,EAAE;AACTC,QAAAA,2BAA2B,EAAGC,UAAD,IAAgB;AAC3Cb,UAAAA,QAAQ,CAACc,oBAAT,CAA8BD,UAA9B,EAA0CE,IAA1C,CAA+C,MAAM;AACnDX,YAAAA,OAAO,CAACY,IAAR,CAAab,WAAb;AACD,WAFD;AAGA,iBAAO,KAAP;AACD;AANQ;AAJH,KADZ;AAcE,IAAA,YAAY,EAAEH,QAAQ,CAACC,IAAT,EAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACN,QAAQ,CAACM,IAAD,CAAT,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAEGL,OAAO,CAACK,IAAD,CAAP,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADE,gBAGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMgB,IAAI,CAACC,SAAL,CAAejB,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAN,CAPJ,CAjBF,CADF;AA8BD;;AAED,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFirebase, isLoaded, isEmpty } from 'react-redux-firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport { useHistory } from 'react-router-dom'; // if you use react-router\n// import GoogleButton from 'react-google-button' // optional\n\nfunction Login() {\n  const firebase = useFirebase();\n  const auth = useSelector((state) => state.firebase.auth);\n  const redirectUrl = '/dash';\n  const history = useHistory();\n  return (\n    <div>\n      <StyledFirebaseAuth\n        uiConfig={{\n          signInFlow: 'popup',\n          signInSuccessUrl: '/signedIn',\n          signInOptions: [ firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID ],\n          callbacks: {\n            signInSuccessWithAuthResult: (authResult) => {\n              firebase.handleRedirectResult(authResult).then(() => {\n                history.push(redirectUrl);\n              });\n              return false;\n            }\n          }\n        }}\n        firebaseAuth={firebase.auth()}\n      />\n      <div>\n        <h2>Auth</h2>\n        {!isLoaded(auth) ? (\n          <span>Loading...</span>\n        ) : isEmpty(auth) ? (\n          <span>Not Authed</span>\n        ) : (\n          <pre>{JSON.stringify(auth, null, 2)}</pre>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}