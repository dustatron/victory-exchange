{"ast":null,"code":"var _jsxFileName = \"/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/PrivateRoute.js\";\nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth';\n\nconst PrivateRoute = ({\n  component: RouteComponent,\n  ...rest\n}) => {\n  const {\n    currrentUser\n  } = useContext(AuthContext);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: routeProps => currrentUser ? /*#__PURE__*/React.createElement(RouteComponent, Object.assign({}, routeProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 47\n      }\n    })) : /*#__PURE__*/React.createElement(Redirect, {\n      to: '/login',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 84\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default PrivateRoute;","map":{"version":3,"sources":["/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/PrivateRoute.js"],"names":["React","useContext","Route","Redirect","AuthContext","PrivateRoute","component","RouteComponent","rest","currrentUser","routeProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,cAAb;AAA6B,KAAGC;AAAhC,CAAD,KAA4C;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAAmBR,UAAU,CAACG,WAAD,CAAnC;AACA,sBACE,oBAAC,KAAD,oBACMI,IADN;AAEE,IAAA,MAAM,EAAGE,UAAD,IAAiBD,YAAY,gBAAG,oBAAC,cAAD,oBAAoBC,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH,gBAAwC,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAMD,CARD;;AAUA,eAAeL,YAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth';\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n  const { currrentUser } = useContext(AuthContext);\n  return (\n    <Route\n      {...rest}\n      render={(routeProps) => (currrentUser ? <RouteComponent {...routeProps} /> : <Redirect to={'/login'} />)}\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}