{"ast":null,"code":"var _jsxFileName = \"/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/Login.js\";\nimport React, { useContext } from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport { AuthContext } from './Auth';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase'; //Firebase\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n\nfunction Login() {\n  const auth = firebase.auth(); // // Configure FirebaseUI.\n\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    signInSuccessUrl: '/',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, {\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      requireDisplayName: true\n    }] // callbacks: {\n    //   // Avoid redirects after sign-in.\n    //   signInSuccessWithAuthResult: setSignedInState(true)\n    // }\n\n  }; // const { currentUser } = useContext(AuthContext);\n  // if (isLoaded(auth) && auth.currentUser !== null) {\n  //   return <Redirect to=\"/Dash\" />;\n  // }\n\n  if (isLoaded(auth) && auth.currentUser === null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: {\n        span: 6,\n        offset: 3\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 19\n      }\n    }, \"My App\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }\n    }, \"Please sign-in:\")), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n      uiConfig: uiConfig,\n      firebaseAuth: firebase.auth(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    })))))));\n  } else {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/dash\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 12\n      }\n    });\n  }\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/Login.js"],"names":["React","useContext","Container","Row","Col","Card","AuthContext","Route","Redirect","useFirestoreConnect","isLoaded","StyledFirebaseAuth","firebase","Login","auth","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","provider","EmailAuthProvider","requireDisplayName","currentUser","span","offset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,iBAA1C;AACA,SAASC,WAAT,QAA4B,QAA5B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,mBAAT,EAA8BC,QAA9B,QAA8C,sBAA9C,C,CAEA;;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAMC,IAAI,GAAGF,QAAQ,CAACE,IAAT,EAAb,CADe,CAEf;;AACA,QAAMC,QAAQ,GAAG;AACf;AACAC,IAAAA,UAAU,EAAE,OAFG;AAGf;AACAC,IAAAA,gBAAgB,EAAE,GAJH;AAKf;AACAC,IAAAA,aAAa,EAAE,CACbN,QAAQ,CAACE,IAAT,CAAcK,kBAAd,CAAiCC,WADpB,EAEb;AAAEC,MAAAA,QAAQ,EAAET,QAAQ,CAACE,IAAT,CAAcQ,iBAAd,CAAgCF,WAA5C;AAAyDG,MAAAA,kBAAkB,EAAE;AAA7E,KAFa,CANA,CAUf;AACA;AACA;AACA;;AAbe,GAAjB,CAHe,CAkBf;AAEA;AACA;AACA;;AAEA,MAAIb,QAAQ,CAACI,IAAD,CAAR,IAAkBA,IAAI,CAACU,WAAL,KAAqB,IAA3C,EAAiD;AAC/C,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,MAAM,EAAE;AAAnB,OAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAG,MAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFF,CADF,eAKE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,kBAAD;AAAoB,MAAA,QAAQ,EAAEX,QAA9B;AAAwC,MAAA,YAAY,EAAEH,QAAQ,CAACE,IAAT,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALF,CADF,CADF,CADF,CADF,CADF;AAmBD,GApBD,MAoBO;AACL,wBAAO,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF;;AAED,eAAeD,KAAf","sourcesContent":["import React, { useContext } from 'react';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport { AuthContext } from './Auth';\nimport { Route, Redirect } from 'react-router-dom';\nimport { useFirestoreConnect, isLoaded } from 'react-redux-firebase';\n\n//Firebase\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n\nfunction Login() {\n  const auth = firebase.auth();\n  // // Configure FirebaseUI.\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    signInSuccessUrl: '/',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      { provider: firebase.auth.EmailAuthProvider.PROVIDER_ID, requireDisplayName: true }\n    ]\n    // callbacks: {\n    //   // Avoid redirects after sign-in.\n    //   signInSuccessWithAuthResult: setSignedInState(true)\n    // }\n  };\n  // const { currentUser } = useContext(AuthContext);\n\n  // if (isLoaded(auth) && auth.currentUser !== null) {\n  //   return <Redirect to=\"/Dash\" />;\n  // }\n\n  if (isLoaded(auth) && auth.currentUser === null) {\n    return (\n      <div>\n        <Container>\n          <Row>\n            <Col md={{ span: 6, offset: 3 }}>\n              <Card>\n                <Card.Header>\n                  <h1 className=\"text-center\">My App</h1>\n                  <p className=\"text-center\">Please sign-in:</p>\n                </Card.Header>\n                <Card.Body>\n                  <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n                </Card.Body>\n              </Card>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  } else {\n    return <Redirect to=\"/dash\" />;\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}