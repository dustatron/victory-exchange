{"ast":null,"code":"var _jsxFileName = \"/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/App.js\";\nimport React, { useState } from 'react';\nimport { Container, Card, Row, Col } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; //Routes\n\nimport SignedIn from './SignedIn'; //Firebase\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n\nfunction App(props) {\n  const [signedInState, setSignedInState] = useState(false); // Configure FirebaseUI.\n\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    // signInSuccessUrl: '/signedIn',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, {\n      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      requireDisplayName: true\n    }] // callbacks: {\n    //   // Avoid redirects after sign-in.\n    //   signInSuccessWithAuthResult: setSignedInState(true)\n    // }\n\n  };\n  console.log('user Signed In state => ', signedInState);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/signedIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SignedIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: {\n      span: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"My App\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, \"Please sign-in:\")), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n    uiConfig: uiConfig,\n    firebaseAuth: firebase.auth(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  })))))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/App.js"],"names":["React","useState","Container","Card","Row","Col","BrowserRouter","Router","Switch","Route","SignedIn","StyledFirebaseAuth","firebase","App","props","signedInState","setSignedInState","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","provider","EmailAuthProvider","requireDisplayName","console","log","span","offset"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,EAA+BC,GAA/B,QAA0C,iBAA1C;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsCf,QAAQ,CAAC,KAAD,CAApD,CADkB,CAGlB;;AACA,QAAMgB,QAAQ,GAAG;AACf;AACAC,IAAAA,UAAU,EAAE,OAFG;AAGf;AACA;AACA;AACAC,IAAAA,aAAa,EAAE,CACbP,QAAQ,CAACQ,IAAT,CAAcC,kBAAd,CAAiCC,WADpB,EAEb;AAAEC,MAAAA,QAAQ,EAAEX,QAAQ,CAACQ,IAAT,CAAcI,iBAAd,CAAgCF,WAA5C;AAAyDG,MAAAA,kBAAkB,EAAE;AAA7E,KAFa,CANA,CAUf;AACA;AACA;AACA;;AAbe,GAAjB;AAgBAC,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCZ,aAAxC;AACA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE;AAAEa,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,MAAM,EAAE;AAAnB,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,eAKE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEZ,QAA9B;AAAwC,IAAA,YAAY,EAAEL,QAAQ,CAACQ,IAAT,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,CADF,CADF,CADF,CALF,CADF,CADF;AA2BD;;AAED,eAAeP,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Card, Row, Col } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n//Routes\nimport SignedIn from './SignedIn';\n\n//Firebase\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n\nfunction App(props) {\n  const [ signedInState, setSignedInState ] = useState(false);\n\n  // Configure FirebaseUI.\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    // signInSuccessUrl: '/signedIn',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n      { provider: firebase.auth.EmailAuthProvider.PROVIDER_ID, requireDisplayName: true }\n    ]\n    // callbacks: {\n    //   // Avoid redirects after sign-in.\n    //   signInSuccessWithAuthResult: setSignedInState(true)\n    // }\n  };\n\n  console.log('user Signed In state => ', signedInState);\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/signedIn\">\n          <SignedIn />\n        </Route>\n\n        <Route path=\"/\">\n          <Container>\n            <Row>\n              <Col md={{ span: 6, offset: 3 }}>\n                <Card>\n                  <Card.Header>\n                    <h1 className=\"text-center\">My App</h1>\n                    <p className=\"text-center\">Please sign-in:</p>\n                  </Card.Header>\n                  <Card.Body>\n                    <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n                  </Card.Body>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}