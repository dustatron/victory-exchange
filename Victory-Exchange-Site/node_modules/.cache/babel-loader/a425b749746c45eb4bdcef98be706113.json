{"ast":null,"code":"var _jsxFileName = \"/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/Login.js\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFirebase, isLoaded, isEmpty } from 'react-redux-firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'; // import { useHistory } from 'react-router-dom'; // if you use react-router\n// import GoogleButton from 'react-google-button' // optional\n\nfunction LoginPage() {\n  const firebase = useFirebase();\n  const auth = useSelector(state => state.firebase.auth);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n    uiConfig: {\n      signInFlow: 'popup',\n      signInSuccessUrl: '/signedIn',\n      signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID],\n      callbacks: {\n        signInSuccessWithAuthResult: (authResult, redirectUrl) => {\n          firebase.handleRedirectResult(authResult).then(() => {// history.push(redirectUrl); if you use react router to redirect\n          });\n          return false;\n        }\n      }\n    },\n    firebaseAuth: firebase.auth(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Auth\"), !isLoaded(auth) ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Loading...\") : isEmpty(auth) ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Not Authed\") : /*#__PURE__*/React.createElement(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, JSON.stringify(auth, null, 2))));\n}\n\nexport default LoginPage;","map":{"version":3,"sources":["/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/Login.js"],"names":["React","useSelector","useFirebase","isLoaded","isEmpty","StyledFirebaseAuth","LoginPage","firebase","auth","state","classes","container","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","handleRedirectResult","then","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,QAAtB,EAAgCC,OAAhC,QAA+C,sBAA/C;AACA,OAAOC,kBAAP,MAA+B,qCAA/B,C,CACA;AACA;;AAEA,SAASC,SAAT,GAAqB;AACnB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,IAAI,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACF,QAAN,CAAeC,IAA3B,CAAxB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEE,OAAO,CAACC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AACE,IAAA,QAAQ,EAAE;AACRC,MAAAA,UAAU,EAAE,OADJ;AAERC,MAAAA,gBAAgB,EAAE,WAFV;AAGRC,MAAAA,aAAa,EAAE,CAAEP,QAAQ,CAACC,IAAT,CAAcO,kBAAd,CAAiCC,WAAnC,CAHP;AAIRC,MAAAA,SAAS,EAAE;AACTC,QAAAA,2BAA2B,EAAE,CAACC,UAAD,EAAaC,WAAb,KAA6B;AACxDb,UAAAA,QAAQ,CAACc,oBAAT,CAA8BF,UAA9B,EAA0CG,IAA1C,CAA+C,MAAM,CACnD;AACD,WAFD;AAGA,iBAAO,KAAP;AACD;AANQ;AAJH,KADZ;AAcE,IAAA,YAAY,EAAEf,QAAQ,CAACC,IAAT,EAdhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACL,QAAQ,CAACK,IAAD,CAAT,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAEGJ,OAAO,CAACI,IAAD,CAAP,gBACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADE,gBAGF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMe,IAAI,CAACC,SAAL,CAAehB,IAAf,EAAqB,IAArB,EAA2B,CAA3B,CAAN,CAPJ,CAjBF,CADF;AA8BD;;AAED,eAAeF,SAAf","sourcesContent":["import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFirebase, isLoaded, isEmpty } from 'react-redux-firebase';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n// import { useHistory } from 'react-router-dom'; // if you use react-router\n// import GoogleButton from 'react-google-button' // optional\n\nfunction LoginPage() {\n  const firebase = useFirebase();\n  const auth = useSelector((state) => state.firebase.auth);\n\n  return (\n    <div className={classes.container}>\n      <StyledFirebaseAuth\n        uiConfig={{\n          signInFlow: 'popup',\n          signInSuccessUrl: '/signedIn',\n          signInOptions: [ firebase.auth.GoogleAuthProvider.PROVIDER_ID ],\n          callbacks: {\n            signInSuccessWithAuthResult: (authResult, redirectUrl) => {\n              firebase.handleRedirectResult(authResult).then(() => {\n                // history.push(redirectUrl); if you use react router to redirect\n              });\n              return false;\n            }\n          }\n        }}\n        firebaseAuth={firebase.auth()}\n      />\n      <div>\n        <h2>Auth</h2>\n        {!isLoaded(auth) ? (\n          <span>Loading...</span>\n        ) : isEmpty(auth) ? (\n          <span>Not Authed</span>\n        ) : (\n          <pre>{JSON.stringify(auth, null, 2)}</pre>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}