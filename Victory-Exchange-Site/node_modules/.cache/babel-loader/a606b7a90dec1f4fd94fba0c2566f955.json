{"ast":null,"code":"var _jsxFileName = \"/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/App.js\";\nimport React, { useState, useEffect } from 'react'; // import React from 'react';\n// import { Container, Card, Row, Col } from 'react-bootstrap';\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; // import { useFirestoreConnect, isLoaded } from 'react-redux-firebase';\n//Routes\n\nimport SignedIn from './SignedIn';\nimport Login from './Login';\nimport Signup from './Signup';\nimport Home from './Home';\nimport { AuthProvider, AuthContext } from './Auth';\nimport PrivateRoute from './PrivateRoute';\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport RequiredAuth from './RequireAuth';\nimport Private from './Private'; //Firebase\n// import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\nimport firebase from 'firebase'; // function onAuthStateChange(callback) {\n//   return firebase.auth().onAuthStateChanged((user) => {\n//     if (user) {\n//       callback({ loggedIn: true });\n//       console.log('The user is logged in');\n//     } else {\n//       callback({ loggedIn: false });\n//       console.log('The user is signed out');\n//     }\n//   });\n// }\n\nfunction App(props) {\n  const [user, setUser] = useState({\n    loggedIn: false\n  });\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \" App\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/App.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","SignedIn","Login","Signup","Home","AuthProvider","AuthContext","PrivateRoute","Header","Dashboard","RequiredAuth","Private","firebase","App","props","user","setUser","loggedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD,C,CACA;AAEA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,QAA1C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CAEA;AACA;;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBrB,QAAQ,CAAC;AAAEsB,IAAAA,QAAQ,EAAE;AAAZ,GAAD,CAAlC;AAEA,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADF,CADF;AAOD;;AAED,eAAeJ,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n// import React from 'react';\n// import { Container, Card, Row, Col } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n// import { useFirestoreConnect, isLoaded } from 'react-redux-firebase';\n\n//Routes\nimport SignedIn from './SignedIn';\nimport Login from './Login';\nimport Signup from './Signup';\nimport Home from './Home';\nimport { AuthProvider, AuthContext } from './Auth';\nimport PrivateRoute from './PrivateRoute';\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport RequiredAuth from './RequireAuth';\nimport Private from './Private';\n\n//Firebase\n// import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n\n// function onAuthStateChange(callback) {\n//   return firebase.auth().onAuthStateChanged((user) => {\n//     if (user) {\n//       callback({ loggedIn: true });\n//       console.log('The user is logged in');\n//     } else {\n//       callback({ loggedIn: false });\n//       console.log('The user is signed out');\n//     }\n//   });\n// }\n\nfunction App(props) {\n  const [ user, setUser ] = useState({ loggedIn: false });\n\n  return (\n    <Router>\n      <div>\n        <h1> App</h1>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}