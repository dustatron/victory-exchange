{"ast":null,"code":"var _jsxFileName = \"/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/App.js\";\nimport React, { useState } from 'react';\nimport { Container, Card } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; //Routes\n\nimport SignedIn from './SignedIn'; //Firebase\n\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n\nfunction App(props) {\n  const [SignedInState, setSignedInState] = useState(false); // Configure FirebaseUI.\n\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    signInSuccessUrl: '/signedIn',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID]\n  };\n\n  function componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged(user => this.setState({\n      isSignedIn: !!user\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/signedIn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SignedIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, \"My App\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Please sign-in:\")), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(StyledFirebaseAuth, {\n    uiConfig: uiConfig,\n    firebaseAuth: firebase.auth(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })))))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dusty/Dropbox/Code/React/victory-exchange/auth-test/src/components/App.js"],"names":["React","useState","Container","Card","BrowserRouter","Router","Switch","Route","SignedIn","StyledFirebaseAuth","firebase","App","props","SignedInState","setSignedInState","uiConfig","signInFlow","signInSuccessUrl","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","componentDidMount","unregisterAuthObserver","onAuthStateChanged","user","setState","isSignedIn"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,iBAAhC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,QAAM,CAAEC,aAAF,EAAiBC,gBAAjB,IAAsCb,QAAQ,CAAC,KAAD,CAApD,CADkB,CAGlB;;AACA,QAAMc,QAAQ,GAAG;AACf;AACAC,IAAAA,UAAU,EAAE,OAFG;AAGf;AACAC,IAAAA,gBAAgB,EAAE,WAJH;AAKf;AACAC,IAAAA,aAAa,EAAE,CAAER,QAAQ,CAACS,IAAT,CAAcC,kBAAd,CAAiCC,WAAnC,EAAgDX,QAAQ,CAACS,IAAT,CAAcG,iBAAd,CAAgCD,WAAhF;AANA,GAAjB;;AASA,WAASE,iBAAT,GAA6B;AAC3B,SAAKC,sBAAL,GAA8Bd,QAAQ,CAACS,IAAT,GAAgBM,kBAAhB,CAAoCC,IAAD,IAAU,KAAKC,QAAL,CAAc;AAAEC,MAAAA,UAAU,EAAE,CAAC,CAACF;AAAhB,KAAd,CAA7C,CAA9B;AACD;;AAED,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,IAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF,eAKE,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEX,QAA9B;AAAwC,IAAA,YAAY,EAAEL,QAAQ,CAACS,IAAT,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF,CADF,CALF,CADF,CADF;AAuBD;;AAED,eAAeR,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Container, Card } from 'react-bootstrap';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n//Routes\nimport SignedIn from './SignedIn';\n\n//Firebase\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n\nfunction App(props) {\n  const [ SignedInState, setSignedInState ] = useState(false);\n\n  // Configure FirebaseUI.\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    signInSuccessUrl: '/signedIn',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [ firebase.auth.GoogleAuthProvider.PROVIDER_ID, firebase.auth.EmailAuthProvider.PROVIDER_ID ]\n  };\n\n  function componentDidMount() {\n    this.unregisterAuthObserver = firebase.auth().onAuthStateChanged((user) => this.setState({ isSignedIn: !!user }));\n  }\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/signedIn\">\n          <SignedIn />\n        </Route>\n\n        <Route path=\"/\">\n          <Container>\n            <Card>\n              <Card.Header>\n                <h1 className=\"text-center\">My App</h1>\n                <p className=\"text-center\">Please sign-in:</p>\n              </Card.Header>\n              <Card.Body>\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n              </Card.Body>\n            </Card>\n          </Container>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}